import{A as d,B as f,d as n,P as l,E as v,G as b,z as C,H as P,I as y,J as h}from"../app.5a7ff449.js";import{u as _,b as N,c as O,d as j}from"./index.dbd843fe.js";const w=d({fov:{type:Number,default:75},aspect:{type:Number},near:{type:Number,default:.01},far:{type:Number,default:2e3},isRenderCamera:{type:Boolean,default:!0},options:{type:f(Object),default:()=>({})}}),x={load:r=>r},z=n({name:"FtPerspectiveCamera"}),B=n({...z,props:w,emits:x,setup(r,{emit:p}){const s=r,i=p;let t=_(),a=N(),e=new l(s.fov,s.aspect||t.offsetWidth/t.offsetHeight,s.near,s.far);a.add(e),i("load",{camera:e,scene:a}),O(s,e),v(y,e);const c=()=>{e.aspect=t.offsetWidth/t.offsetHeight,e.updateProjectionMatrix()},u=b.exports.debounce(()=>c(),5),o=new ResizeObserver(u);return o.observe(t),j(s.options,e,a),C(()=>{a.remove(e),o.unobserve(t),a=null,t=null,e=null}),(m,H)=>P(m.$slots,"default")}});var F=B;const S=h(F);export{S as F};
